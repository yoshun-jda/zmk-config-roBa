#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <2 3>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <6 7>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <7 8>;
            layers = <0>;
        };

        eisuu {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <13 12>;
            layers = <0>;
        };

        obsidian_bracket {
            bindings = <&bracket_to_obsidian>;
            key-positions = <24 25>;
        };

        kana {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <18 19>;
            layers = <0>;
        };

        bracket90 {
            bindings = <&bracket90>;
            key-positions = <30 31>;
        };
    };

    macros {
        bracket_to_obsidian: to_layer_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp RIGHT_BRACKET &kp LEFT_ARROW &kp LEFT_ARROW>;
            label = "TO_LAYER_0";
        };

        bracket90: bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT>;
            label = "BRACKET";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&bracket_to_obsidian>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LG(SEMICOLON) TAB  &kp C        &kp U           &kp Y           &kp P                                            &kp V            &kp D            &kp H            &kp G        &kp J
&mt LEFT_SHIFT A       &mt LCTRL O  &mt LEFT_GUI E  &mt LEFT_ALT I  &kp PERIOD   &kp LS(LG(SQT))      &kp MINUS      &kp K            &mt RIGHT_ALT T  &mt RIGHT_GUI N  &mt RCTRL S  &mt RIGHT_SHIFT R
&kp Q                  &kp X        &kp COMMA       &kp Z           &kp SLASH    &kp COLON            &kp SEMICOLON  &kp F            &kp W            &kp M            &lt 5 B      &kp L
&kp LEFT_SHIFT         &kp LCTRL    &kp LEFT_ALT    &lt 5 TAB       &lt 1 SPACE  &lt 2 ENTER          &lt 3 ENTER    &lt 4 BACKSPACE                                                 &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PG_UP>;
        };

        NUM_SIMBOL {
            bindings = <
&kp TILDE              &kp LS(N7)        &kp LS(N8)        &kp LS(N9)        &kp LS(N0)                                                   &kp RIGHT_BRACE  &kp N7        &kp N8        &kp N9        &kp RIGHT_BRACKET
&kp GRAVE              &kp LS(NUMBER_4)  &kp LS(N5)        &kp LS(NUMBER_6)  &kp LESS_THAN     &kp LC(LA(KP_NUMBER_0))      &kp QUESTION  &kp LEFT_BRACE   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp LEFT_BRACKET
&mt LEFT_SHIFT LS(N0)  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp GREATER_THAN  &kp EQUAL                    &kp PLUS      &kp N0           &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PIPE
&kp MINUS              &trans            &bootloader       &trans            &trans            &trans                       &none         &none                                                      &kp BACKSLASH
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PG_UP>;
        };

        ARROW {
            bindings = <
&kp F1          &kp F2                  &kp F3                &kp LG(LS(NUMBER_2))   &kp LS(LG(NUMBER_4))                      &kp F8          &kp K_VOLUME_UP  &kp C_VOLUME_DOWN  &kp F12          &trans
&kp HOME        &kp LEFT_ARROW          &mt LCTRL LEFT_ARROW  &mt LEFT_GUI UP_ARROW  &mt LEFT_ALT RIGHT    &trans      &trans  &kp LEFT_ARROW  &kp UP_ARROW     &kp RIGHT          &kp RIGHT_SHIFT  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans                &kp DOWN_ARROW         &trans                &trans      &trans  &trans          &kp DOWN_ARROW   &trans             &trans           &trans
&trans          &trans                  &trans                &trans                 &trans                &trans      &trans  &kp RIGHT_GUI                                                        &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        SHORTCUT {
            bindings = <
&trans      &kp ESCAPE  &kp LS(LG(NUMBER_2))  &kp LG(LC(R))         &kp LS(LG(NUMBER_4))                                &kp K_VOLUME_UP  &kp K_VOLUME_DOWN  &kp RG(N7)  &kp RG(N8)  &kp RG(N9)
&trans      &trans      &kp LS(LESS_THAN)     &kp LS(GREATER_THAN)  &trans                &trans           &trans       &trans           &trans             &trans      &trans      &trans
&trans      &trans      &trans                &trans                &trans                &bootloader      &bootloader  &trans           &trans             &trans      &trans      &bootloader
&sys_reset  &trans      &trans                &trans                &trans                &trans           &trans       &trans                                                      &bt BT_CLR_ALL
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans     &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp RCLK  &mkp MB2         &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &mkp MB1   &lt 5 RIGHT_ALT  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                        &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans    &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &mkp MB1  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans    &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans    &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
